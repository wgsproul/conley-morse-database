
INSTALLATION DIRECTIONS (and some brief instructions)
-----------------------------------------------------
(0) Install "conley-morse-database"
Note: If you are reading this, you likely 
      have already done this, unless you are 
      browsing the source on the web.
Details:
  A) TYPE: svn checkout http://conley-morse-database.googlecode.com/svn/tags/conley-morse-database-1.0 conley-morse-database

(Assuming of course you want the 1.0 version.)

(1) Install "cluster-delegator"
Details:
  A) Change directory to parent directory of conley-morse-databse
  B) TYPE: svn checkout http://cluster-delegator.googlecode.com/svn/tags/cluster-delegator-1.0 cluster-delegator
  

(2) Install Boost. 
Details:
 A) Download the boost tarball,
    decompress it, 
    and cd to the boost dir (It doesn't matter where you put this --
    you can even delete it when you are done.)
 B) TYPE sudo ./bootstrap.sh
 C) TYPE sudo ./b2 install
 D) Check the boost installation was successful by seeing that
    /usr/local/include/boost/ exists and has lots of header files.
  and /usr/local/lib/ contains boost libraries (.a, .so, and/or .dylib files)

(3) Install MPI if it is not installed already. 
Notes: Mac Users: For Mac OS X 10.4 - 10.6, this comes standard.
                  For Mac OS X 10.7 - 10.8, it does not.  
    You can check if it is installed by seeing if the command
    "mpicxx" is recognized.
Details:
 A) Download open-mpi from the internet.
 B) cd openmpi-1.4.4
 C) sudo ./configure --prefix=/usr/local
 D) sudo make all install

--EXTRAS, REQUIRED FOR SOME FEATURES--
(4) Install CAPD
  CAPD provides an integrator which can be used to create time-t 
  maps arising from ordinary differential equations (ODEs).

  See the CAPD documentation for up to date details on installation.
  In particular, we have found that it is best to install 
  "CAPD-Dynsys-4.0"  
  As of this writing, the following seems to work:
    A package called "pkg-config" is required.
    This is often pre-installed. 
    On Mac OS X, it can be obtained with the brew installer with
      brew install pkg-config
    (See (5) below for more information on obtaining "brew".)

  Now from the CAPD folder:
    ./configure
    make
    make install


(5) Install "cmake"
We require "cmake" to use "sdsl"

  On Mac OS X:
    cmake can be installed using "brew". See
    http://mxcl.github.io/homebrew/
    ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"
    brew update
    brew install cmake

    See http://mxcl.github.io/homebrew/ 

  On Linux:
    Download and decompress the tarball from 
    http://www.cmake.org/cmake/resources/software.html
    
    This might be done from the command line with:

    curl http://www.cmake.org/files/v2.8/cmake-2.8.10.2.tar.gz \
      -o cmake-2.8.10.2.tar.gz
    tar xvfz cmake-2.8.10.2.tar.gz

    As superuser: (install in /usr/local/)
      ./bootstrap
      sudo make
      sudo make install
    Not as superuser: (install in <install_prefix>)
      ./bootstrap --prefix=<install_prefix>
      make
      make install
     Since the installation isn't in a default path, 
     you need to make the cmake binaries to be visible. 
     Edit the ~/.bash_profile file to contain the line
     PATH="<install_prefix>/bin:${PATH}"
     You may need to restart your terminal program at this point.

(6) Install "sdsl"
  SDSL is maintained as a git repository. 
  https://github.com/simongog/sdsl

  To install it, try the following::
  cd <install-directory>
  curl -L -o sdsl-master.tar.gz \
    https://api.github.com/repos/simongog/sdsl/tarball
  tar xvfz sdsl-master.tar.gz
  mkdir sdsl
  cd simongog-sdsl-4e85037    #this might change; whatever folder was created
  ./install.sh <install-directory>/sdsl


See README file for further instructions.

Email sharker@math.rutgers.edu
if you can't get it to work or have any 
other questions.

